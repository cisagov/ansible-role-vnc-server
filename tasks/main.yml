---
# tasks file for ansible-role-vnc-server

- name: Load var file with package names based on the OS type
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
        # The OS family and distribution for Kali is "Kali GNU/Linux",
        # which is not an allowable file name in Linux due to the
        # slash.  We will allow Kali to fall through and use the
        # Debian vars file.
        - Debian.yml
      paths:
        - "vars"

- name: Install TigerVNC server
  package:
    name: "{{ vnc_package_names }}"

# Does this go here?  Can this be generalized?
- name: Disable screen locking
  file:
    path: /etc/xdg/autostart/light-locker.desktop
    state: absent

#
# Create and configure the vnc user
#
- name: Create the VNC user
  user:
    name: "{{ username }}"
    shell: /bin/bash

- name: Create .vnc directory for VNC user
  file:
    path: /home/{{ username }}/.vnc
    state: directory
    mode: 0755
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Set VNC password for VNC user
  shell: |
    set -o pipefail
    echo {{ password }} | vncpasswd -f > /home/{{ username }}/.vnc/passwd
  args:
    executable: /bin/bash
    creates: /home/{{ username }}/.vnc/passwd

- name: Set correct permissions for VNC passwd file
  file:
    path: /home/{{ username }}/.vnc/passwd
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0600

#
# Install an SSH keypair for the VNC user.  This will enable Guacamole
# to perform file transfers to/from this instance.
#
# Note that Guacamole (v.1.0.0) currently only supports RSA keys.
#
- name: Install SSH public key for VNC user
  copy:
    content: "{{ vnc_ssh_public_key }}"
    dest: "/home/{{ vnc_username }}/.ssh/id_rsa.pub"
    mode: 0644
    owner: "{{ vnc_username }}"
    group: "{{ vnc_username }}"
  when: public_ssh_key|length > 0

- name: Install SSH private key for VNC user
  copy:
    content: "{{ vnc_ssh_private_key }}"
    dest: "/home/{{ vnc_username }}/.ssh/id_rsa"
    mode: 0600
    owner: "{{ vnc_username }}"
    group: "{{ vnc_username }}"
  no_log: true
  when: private_ssh_key|length > 0

- name: Add VNC SSH public key as authorized key
  authorized_key:
    user: "{{ vnc_username }}"
    key: "{{ vnc_ssh_public_key }}"
  when:
    - public_ssh_key|length > 0
    - private_ssh_key|length > 0

#
# Set up VNC systemd service
#
- name: Set up VNC as a systemd service
  template:
    src: vncserver@.service
    dest: /lib/systemd/system/
    mode: 0644

- name: Systemd daemon-reload
  systemd:
    daemon_reload: true
  when:
    - ansible_service_mgr == "systemd"

- name: Enable VNC systemd service
  systemd:
    name: "vncserver@1.service"
    enabled: true
  when:
    - ansible_service_mgr == "systemd"
